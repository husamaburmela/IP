<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6VsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDeYUCAjp6AgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp7QoK6xkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgI
        6aoICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/BwfprwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAKCusyCAjp/ggI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn+CwvqMAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAgI6aIICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6cEICOneCAjp/wgI
        6f0ICOm9CAjp5QgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOieAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAOgLCAjp9ggI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/AAAAAAcH
        6G8ICOn/CAjp6AAAAAAICOqFCAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6fQAAOMJAAAAAAAAAAAAAAAAAAAAAAcH6UUICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8AAAAABwfobwgI6f8ICOnoAAAAAAgI6oUICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6EIAAAAAAAAAAAAAAAAAAAAABwfobwgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wAAAAAHB+hvCAjp/wgI6egAAAAACAjqhQgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/BwfqbQAAAAAAAAAAAAAAAAAAAAAICOl/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/AAAAAAcH6G8ICOn/CAjp6AAAAAAAAOMJDw/wEQ8P8BEGBuwoCAjqmwgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOl+AAAAAAAAAAAAAAAAAAAAAAcH6m4ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8AAAAABwfobwgI6f8ICOnoAAAAAAcH6UcICOmICAjpiAgI
        6j4AAP8BCAjoywgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wcH6mwAAAAAAAAAAAAAAAAAAAAACQnoWQgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wAAAAAHB+hvCAjp/wgI6egAAAAACAjqhQgI
        6f8ICOn/CAjp3gAAAAAHB+mOCAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CQnqVgAAAAAAAAAAAAAAAAAA
        AAAJCek6CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/AAAAAAcH6G8ICOn/CAjp6AAA
        AAAICOqFCAjp/wgI6fQJCeiSAAAAAAgI6aQICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8JCeg3AAAAAAAA
        AAAAAAAAAAAAAAAA/wUJCenwCAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8AAAAABwfobwgI
        6f8ICOnoAAAAAAAAAAAAAAAAAAAAAAAAAAAJCek5CAjp9wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp7gAA
        /wQAAAAAAAAAAAAAAAAAAAAAAAAAAAcH6a4ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6aMHB+nPCAjp/wgI6fsICOidCAjpmQgI6ZkICOidCAjpwggI6fwICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8HB+mrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwfoTQgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wcH6koAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8BBwfpzQgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOnMAAD/AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCek6CAjp+QgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp+AkJ6DcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAHB+ptCAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8HB+lpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAJCep4CAjp/QgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn9CQnpdQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHB+hNBwfp7wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp7QcH6koAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO8QCAjpfQgI6e0ICOn/CAjp/wgI
        6f8ICOn/CAjp/wgI6f8ICOn/CAjp/wgI6f8ICOn/CAjp7AgI6HwAAO0OAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVBggI
        50EICOmICAjpvAgI6dQICOnpCAjp6QgI6dQICOm8CAjpiAgI50AAANUGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/+f////D////gf///wD///4Af//8AD//+AAf//AAD//gAAf/wA
        AD/8AAA/+AAAH/AAAA/wAAAP4AAAB+AMgAfgDIAH4AyAB+AM+AfgDMwH4AyEB+AMhAfgDPwH4AAAB/AA
        AA/wAAAP+AAAH/wAAD/+AAB//wAA///AA///8A//
</value>
  </data>
</root>